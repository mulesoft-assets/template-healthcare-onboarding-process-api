<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <context:property-placeholder location="common.properties, mule.${mule.env}.properties" />
    <http:listener-config name="healthcare-onboarding-process-api-httpListenerConfig" host="0.0.0.0" port="${https.port}" doc:name="HTTP Listener Configuration" protocol="HTTPS">
        <tls:context>
            <tls:key-store type="jks" path="${keystore.location}" alias="${key.alias}" keyPassword="${keystore.password}" password="${key.password}"/>
        </tls:context>
    </http:listener-config>
    <apikit:config name="healthcare-onboarding-process-api-config" raml="healthcare-onboarding-process-api.raml" consoleEnabled="true" doc:name="Router">
        <apikit:flow-mapping resource="/users" action="post" content-type="application/json" flow-ref="post:/users:healthcare-onboarding-process-api-config"/>
        <apikit:flow-mapping resource="/users" action="patch" flow-ref="patch:/users:healthcare-onboarding-process-api-config"/>

    </apikit:config>

    <http:request-config name="HTTP_EHR2FHIR_System_API_Request_Configuration"  host="${api.ehr2fhir.system.host}" port="${api.ehr2fhir.system.port}" basePath="${api.ehr2fhir.system.basepath}" doc:name="HTTP Request Configuration" >
        <http:raml-api-configuration location="healthcare-fhir-system-api/healthcare-system-api.raml"/>
    </http:request-config>
    
    <http:request-config name="HTTP_Identity_Service_Request_Configuration"  host="${api.identity.service.host}"  basePath="${api.identity.service.basepath}" doc:name="HTTP Request Configuration" port="${api.identity.service.port}">
        <http:raml-api-configuration location="healthcare-identity-service-api/healthcare-identity-service-api.raml"/>


    </http:request-config>
    <http:request-config name="HTTP_SFHC2FHIR_System_API_Request_Configuration" host="${api.sfhc2fhir.system.host}" port="${api.sfhc2fhir.system.port}" basePath="${api.sfhc2fhir.system.basepath}" doc:name="HTTP Request Configuration">
        <http:raml-api-configuration location="healthcare-fhir-system-api/healthcare-system-api.raml"/>
    </http:request-config>
    <flow name="healthcare-onboarding-process-api-main">
        <http:listener config-ref="healthcare-onboarding-process-api-httpListenerConfig" path="/api/*" doc:name="HTTP"/>
        <apikit:router config-ref="healthcare-onboarding-process-api-config" doc:name="APIkit Router"/>
        <exception-strategy ref="healthcare-onboarding-process-api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>

    <flow name="post:/users:healthcare-onboarding-process-api-config">
        <dw:transform-message doc:name="Transform input JSON into Map and create patientData variable">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            <dw:set-variable variableName="patientData"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
        </dw:transform-message>

        <http:request config-ref="HTTP_Identity_Service_Request_Configuration" path="/users" method="GET" doc:name="Call Identity Service GET users by login">
            <http:request-builder>
                <http:query-param paramName="login" value="#[payload.login]"/>


            </http:request-builder>
            <http:success-status-code-validator values="200,400"/>
        </http:request>
        <choice doc:name="Does user with the same login exist?">
            <when expression="#[dw('sizeOf payload') == 0]">
                <logger message="Login is available" level="INFO" doc:name="Log 'Login is available'"/>
                <dw:transform-message doc:name="Create Patient FHIR">
                    <dw:input-variable variableName="patientData"/>
                    <dw:set-payload resource="classpath:patient_fhir.dwl"/>
                    <dw:set-variable variableName="sfhcPatient" resource="classpath:patient_fhir.dwl"/>   
                </dw:transform-message>
                <logger message="Creating patient: #[message.payloadAs(String)]" level="INFO" doc:name="Log 'Creating patient...'"/>
                <http:request config-ref="HTTP_EHR2FHIR_System_API_Request_Configuration" path="/Patient" method="POST" doc:name="Create Patient using EHR FHIR System API">

                </http:request>
                <dw:transform-message doc:name="Create Patient FHIR with Identifier">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
flowVars.sfhcPatient ++ {
	identifier : [{
		value : (inboundProperties."location" splitBy "/")[-1]
	}]
}]]></dw:set-payload>
                    <dw:set-variable variableName="patientId"><![CDATA[%dw 1.0
%output application/java
---
(inboundProperties."location" splitBy "/")[-1]]]></dw:set-variable>
                </dw:transform-message>
                <logger message="Creating patient in SFHC: #[message.payloadAs(String)]" level="INFO" doc:name="Log 'Creating patient in SFHC'"/>
                <http:request config-ref="HTTP_SFHC2FHIR_System_API_Request_Configuration" path="/Patient" method="POST" doc:name="Create Patient using SFHC FHIR System API"/>

                <dw:transform-message doc:name="Create POST User request">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{	
	"login" : flowVars.patientData.login,
	"password" : flowVars.patientData.password,
	"patientId" : flowVars.patientId
}]]></dw:set-payload>

                </dw:transform-message>
                <logger message="Creating user with patient ID: #[dw(&quot;(inboundProperties.\&quot;location\&quot; splitBy \&quot;/\&quot;)[-1]&quot;)]" level="INFO" doc:name="Log 'Creating user'"/>
                <http:request config-ref="HTTP_Identity_Service_Request_Configuration" path="/users" method="POST" doc:name="Call Identity Service POST User"/>

                <dw:transform-message doc:name="Create JSON response">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  "patientId" : flowVars.patientId,
  "message": "Registration completed successfully. You can log in with your credentials."
}]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <otherwise>
                <logger message="Login is already in use" level="INFO" doc:name="Log 'Login already in use'"/>
                <set-property propertyName="http.status" value="409" doc:name="HTTP status Property"/>
                <dw:transform-message doc:name="Create JSON response">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  "message": "Login you are trying to set is already in use. Please, choose another one."
}]]></dw:set-payload>
                </dw:transform-message>
            </otherwise>
        </choice>


    </flow>
    <flow name="patch:/users:healthcare-onboarding-process-api-config">
        <dw:transform-message doc:name="Transform input JSON into Map and create patientData variable">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
inboundProperties."http.query.params".login]]></dw:set-payload>
            <dw:set-variable variableName="patientData"><![CDATA[%dw 1.0
%output application/java
---
payload ++ {
	login: inboundProperties."http.query.params".login
}]]></dw:set-variable>
        </dw:transform-message>
        <http:request config-ref="HTTP_Identity_Service_Request_Configuration" path="/users" method="GET" doc:name="Call Identity Service to GET user by login">
            <http:request-builder>
                <http:query-param paramName="login" value="#[payload]"/>
            </http:request-builder>
            <http:success-status-code-validator values="200,400"/>
        </http:request>
        <choice doc:name="Does user with the login exist?">
            <when expression="#[dw('sizeOf payload') != 0]">
                <dw:transform-message doc:name="Create PATCH User request">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{	
	"password" : flowVars.patientData.password
}]]></dw:set-payload>
                </dw:transform-message>
                <http:request config-ref="HTTP_Identity_Service_Request_Configuration" path="/users/{login}" method="PATCH" doc:name="Call Identity Service PATCH User">
                    <http:request-builder>
                        <http:uri-param paramName="login" value="#[flowVars.patientData.login]"/>

                    </http:request-builder>
                </http:request>
                <dw:transform-message doc:name="Create JSON response">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  "message": "User was updated successfully."
}]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <otherwise>
                <set-property propertyName="http.status" value="404" doc:name="HTTP status Property"/>
                <dw:transform-message doc:name="Create JSON response">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  "message": "User with specified login does not exist."
}]]></dw:set-payload>
                </dw:transform-message>
            </otherwise>
        </choice>
    </flow>
    <apikit:mapping-exception-strategy name="healthcare-onboarding-process-api-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;TEST: Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="422">
            <apikit:exception value="org.mule.module.http.internal.request.ResponseValidatorException"/>
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: Unprocessable Entity}" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
